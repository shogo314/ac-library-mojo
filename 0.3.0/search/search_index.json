{"config":{"lang":["en","ja"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"benchmark/","title":"\u30d9\u30f3\u30c1\u30de\u30fc\u30af","text":""},{"location":"benchmark/#_2","title":"\u5b9f\u884c\u74b0\u5883","text":"<ul> <li>\u30db\u30b9\u30c8OS: Windows 11 Home 24H2</li> <li>WSL\u30d0\u30fc\u30b8\u30e7\u30f3: WSL2</li> <li>Linux\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3: Ubuntu 22.04</li> <li>CPU: AMD Ryzen 5 7520U</li> <li>\u30e1\u30e2\u30ea: 8GB (WSL\u304c\u4f7f\u3048\u308b\u306e\u306f\u3082\u3063\u3068\u5c11\u306a\u3044\u306f\u305a)</li> </ul> <pre><code>oj-verify run {path}\n</code></pre> <p>\u3092 10 \u56de\u305a\u3064\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"benchmark/#_3","title":"\u5b9f\u884c\u7d50\u679c","text":""},{"location":"benchmark/#double-ended-priority-queue","title":"Double-Ended Priority Queue","text":"\u6a5f\u80fd \u5b9f\u884c\u6642\u9593 avg/min/max (sec) \u30e1\u30e2\u30ea avg/min/max (MB) IntervalHeap 2.615/2.345/3.602 35.91/35.62/36.12 SegTree + Compress 2.589/2.286/2.713 68.06/67.56/68.40"},{"location":"benchmark/#point-add-range-sum","title":"Point Add Range Sum","text":"\u6a5f\u80fd \u5b9f\u884c\u6642\u9593 avg/min/max (sec) \u30e1\u30e2\u30ea avg/min/max (MB) FenwickTree 4.248/3.985/4.627 41.64/40.56/43.67 SegTree 3.978/3.913/4.091 41.61/41.08/41.96 SegTree with Parameter 4.083/3.916/4.337 41.44/40.97/41.97"},{"location":"benchmark/#point-set-range-composite","title":"Point Set Range Composite","text":"\u6a5f\u80fd \u5b9f\u884c\u6642\u9593 avg/min/max (sec) \u30e1\u30e2\u30ea avg/min/max (MB) SegTree 6.778/6.484/7.550 61.02/60.33/62.71 SegTree with Parameter 6.637/6.448/7.156 61.84/60.46/62.60"},{"location":"benchmark/#static-range-sum","title":"Static Range Sum","text":"\u6a5f\u80fd \u5b9f\u884c\u6642\u9593 avg/min/max (sec) \u30e1\u30e2\u30ea avg/min/max (MB) Cumulative Sum 2.984/2.798/3.377 36.85/35.47/37.89 FenwickTree 3.167/2.899/3.924 36.87/34.60/37.95 SegTree 3.032/2.949/3.287 37.66/36.15/38.21"},{"location":"benchmark/#predecessor-problem","title":"Predecessor Problem","text":"\u6a5f\u80fd \u5b9f\u884c\u6642\u9593 avg/min/max (sec) \u30e1\u30e2\u30ea avg/min/max (MB) AVLTree 18.690/17.863/21.966 838.10/837.10/839.18 SegTree 8.742/8.552/9.148 514.45/514.03/514.68"},{"location":"benchmark/#ordered-set","title":"Ordered Set","text":"\u6a5f\u80fd \u5b9f\u884c\u6642\u9593 avg/min/max (sec) \u30e1\u30e2\u30ea avg/min/max (MB) AVLTree 4.765/4.473/5.605 76.95/73.18/79.19 SegTree + Compress 2.911/2.797/3.130 68.45/67.70/68.93"},{"location":"contribute/","title":"\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8","text":"<p>\u3053\u306e\u30da\u30fc\u30b8\u306f\u958b\u767a\u4e2d\u3067\u3059\u3002</p>"},{"location":"contribute/#_2","title":"\u30e9\u30a4\u30d6\u30e9\u30ea","text":"<p>online-judge-tools/verification-helper \u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"contribute/#_3","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>pip3 install online-judge-verify-helper\n</code></pre>"},{"location":"contribute/#_4","title":"\u5b9f\u884c","text":"<pre><code>oj-verify run\n</code></pre> <p>\u521d\u56de\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002</p>"},{"location":"contribute/#_5","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8","text":"<p>MkDocs \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002 GitHub Actions\u3067\u81ea\u52d5\u5316\u3057\u3066\u3044\u308b\u306e\u3067 <code>docs</code> \u3092\u7de8\u96c6\u3059\u308b\u3060\u3051\u3067\u3088\u3044\u3067\u3059\u3002</p> <p>\u624b\u5143\u3067\u30da\u30fc\u30b8\u3092\u898b\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"contribute/#_6","title":"\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb","text":"<pre><code>pip3 install mkdocs mkdocs-material mkdocs-static-i18n markdown-katex pymdown-extensions mike\n</code></pre>"},{"location":"contribute/#_7","title":"\u5b9f\u884c","text":"<pre><code>mkdocs serve\n</code></pre>"},{"location":"","title":"ac-library-mojo Docs","text":""},{"location":"#_1","title":"\ud83d\udce6 \u6982\u8981","text":"<p>ac-library-mojo \u306f AtCoder \u306e ac-library \u3092 Mojo \u8a00\u8a9e\u306b\u79fb\u690d\u3057\u305f\u3082\u306e\u3067\u3001\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5411\u3051\u306b\u8a2d\u8a08\u3055\u308c\u305f\u9ad8\u6027\u80fd\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002</p>"},{"location":"#_2","title":"\ud83d\ude80 \u4f7f\u3044\u65b9","text":"<p>ac-library-mojo \u3092\u4f7f\u3063\u3066\u3001Union Find \u306e\u554f\u984c\u3092\u89e3\u304f\u4f8b\u3067\u3059\u3002</p> <pre><code>from atcoder.io import IO\nfrom atcoder.dsu import DSU\n\nfn main() raises:\n    var io = IO()\n    var N = io.nextInt()\n    var Q = io.nextInt()\n    var dsu = DSU(N)\n\n    for _ in range(Q):\n        var t = io.nextInt()\n        var u = io.nextInt()\n        var v = io.nextInt()\n        if t == 0:\n            _ = dsu.merge(u, v)\n        else:\n            if dsu.same(u, v):\n                print(1)\n            else:\n                print(0)\n</code></pre>"},{"location":"#_3","title":"\ud83e\udd1d \u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8","text":"<p>\u8ca2\u732e\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u65b9\u306f\u3001\u4ee5\u4e0b\u306e\u30ac\u30a4\u30c9\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\uff1a</p> <p>\u65e5\u672c\u8a9e\u30ac\u30a4\u30c9 \ud83d\udc49 \u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8</p> <p>\u7c21\u5358\u306a\u4fee\u6b63\u30fbIssue\u306e\u63d0\u6848\u30fb\u65b0\u6a5f\u80fd\u306e\u8ffd\u52a0\u306a\u3069\u3001\u3069\u3093\u306a\u8ca2\u732e\u3082\u6b53\u8fce\u3057\u307e\u3059\uff01</p>"},{"location":"#license","title":"\ud83d\udcc4 License","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f <code>CC0-1.0</code> \u307e\u305f\u306f <code>Apache-2.0</code> \u306e\u30c7\u30e5\u30a2\u30eb\u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u3059\u3002\u3069\u3061\u3089\u304b\u4e00\u65b9\u3092\u9078\u3093\u3067\u3054\u5229\u7528\u3044\u305f\u3060\u3051\u307e\u3059\u3002</p>"},{"location":"#contact","title":"\ud83d\udcec Contact","text":"<p>\u3054\u8cea\u554f\u30fb\u63d0\u6848\u30fb\u96d1\u8ac7\u306a\u3069\u3001\u6c17\u8efd\u306b\u3054\u9023\u7d61\u304f\u3060\u3055\u3044\uff01</p> <ul> <li>\ud83d\udcac Discord: Join our Discord server</li> </ul>"},{"location":"license/","title":"\u30e9\u30a4\u30bb\u30f3\u30b9","text":"<p>\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f <code>CC0-1.0</code> \u307e\u305f\u306f <code>Apache-2.0</code> \u306e\u30c7\u30e5\u30a2\u30eb\u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u3059\u3002\u3069\u3061\u3089\u304b\u4e00\u65b9\u3092\u9078\u3093\u3067\u3054\u5229\u7528\u3044\u305f\u3060\u3051\u307e\u3059\u3002</p> <p>The full license texts are included below:</p> <p>=========================</p> <p>Creative Commons Legal Code</p> <p>CC0 1.0 Universal</p> <pre><code>CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.\n</code></pre> <p>Statement of Purpose</p> <p>The laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an \"owner\") of an original work of authorship and/or a database (each, a \"Work\").</p> <p>Certain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (\"Commons\") that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.</p> <p>For these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the \"Affirmer\"), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.</p> <ol> <li>Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (\"Copyright and Related Rights\"). Copyright and Related Rights include, but are not limited to, the following:</li> </ol> <p>i. the right to reproduce, adapt, distribute, perform, display,      communicate, and translate a Work;  ii. moral rights retained by the original author(s) and/or performer(s); iii. publicity and privacy rights pertaining to a person's image or      likeness depicted in a Work;  iv. rights protecting against unfair competition in regards to a Work,      subject to the limitations in paragraph 4(a), below;   v. rights protecting the extraction, dissemination, use and reuse of data      in a Work;  vi. database rights (such as those arising under Directive 96/9/EC of the      European Parliament and of the Council of 11 March 1996 on the legal      protection of databases, and under any national implementation      thereof, including any amended or successor version of such      directive); and vii. other similar, equivalent or corresponding rights throughout the      world based on applicable law or treaty, and any national      implementations thereof.</p> <ol> <li> <p>Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose.</p> </li> <li> <p>Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"License\"). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose.</p> </li> <li> <p>Limitations and Disclaimers.</p> </li> </ol> <p>a. No trademark or patent rights held by Affirmer are waived, abandoned,     surrendered, licensed or otherwise affected by this document.  b. Affirmer offers the Work as-is and makes no representations or     warranties of any kind concerning the Work, express, implied,     statutory or otherwise, including without limitation warranties of     title, merchantability, fitness for a particular purpose, non     infringement, or the absence of latent or other defects, accuracy, or     the present or absence of errors, whether or not discoverable, all to     the greatest extent permissible under applicable law.  c. Affirmer disclaims responsibility for clearing rights of other persons     that may apply to the Work or any use thereof, including without     limitation any person's Copyright and Related Rights in the Work.     Further, Affirmer disclaims responsibility for obtaining any necessary     consents, permissions or other rights required for any use of the     Work.  d. Affirmer understands and acknowledges that Creative Commons is not a     party to this document and has no duty or obligation with respect to     this CC0 or use of the Work.</p> <p>=========================</p> <pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright [yyyy] [name of copyright owner]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"apis/","title":"Index","text":"<p>APIs</p>"},{"location":"apis/#atcoder","title":"atcoder","text":""},{"location":"apis/#packages","title":"Packages","text":"<ul> <li>ext</li> <li>py</li> </ul>"},{"location":"apis/#modules","title":"Modules","text":"<ul> <li>convolution</li> <li>dsu</li> <li>fenwicktree</li> <li>io</li> <li>lazysegtree</li> <li>math</li> <li>maxflow</li> <li>method_traits</li> <li>mincostflow</li> <li>modint</li> <li>scc</li> <li>segtree</li> <li>string</li> <li>twosat</li> </ul>"},{"location":"apis/convolution/convolution_int/","title":"convolution_int","text":"<p>APIs &gt; convolution &gt; convolution_int.md</p>"},{"location":"apis/convolution/convolution_int/#convolution_int","title":"convolution_int","text":"<pre><code>convolution_int(a: List[Int], b: List[Int]) -&gt; List[Int]\n</code></pre> <p>\u7573\u307f\u8fbc\u307f\u3092\u8a08\u7b97\u3059\u308b\u3002a,ba, ba,b \u306e\u5c11\u306a\u304f\u3068\u3082\u4e00\u65b9\u304c\u7a7a\u914d\u5217\u306e\u5834\u5408\u306f\u7a7a\u914d\u5217\u3092\u8fd4\u3059\u3002</p> <p>\u5236\u7d04</p> <ul> <li>\u2223a\u2223+\u2223b\u2223\u22121\u2264224|a| + |b| - 1 \\le 2^{24}\u2223a\u2223+\u2223b\u2223\u22121\u2264224</li> <li>\u7573\u307f\u8fbc\u3093\u3060\u5f8c\u306e\u914d\u5217\u306e\u8981\u7d20\u304c\u5168\u3066 <code>Int</code> \u306b\u53ce\u307e\u308b</li> </ul> <p>\u8a08\u7b97\u91cf</p> <p>n=\u2223a\u2223+\u2223b\u2223n = |a| + |b|n=\u2223a\u2223+\u2223b\u2223 \u3068\u3057\u3066</p> <ul> <li>O(nlog\u2061n)O(n \\log n)O(nlogn)</li> </ul>"},{"location":"apis/convolution/convolution_mod/","title":"convolution_mod","text":"<p>APIs &gt; convolution &gt; convolution_mod.md</p>"},{"location":"apis/convolution/convolution_mod/#convolution_mod","title":"convolution_mod","text":"<pre><code>convolution_mod[M: Int](a: List[StaticModint[M]], b: List[StaticModint[M]]) -&gt; List[StaticModint[M]]\n</code></pre> <p>\u7573\u307f\u8fbc\u307f\u3092 mod mmm \u3067\u8a08\u7b97\u3059\u308b\u3002a,ba, ba,b \u306e\u5c11\u306a\u304f\u3068\u3082\u4e00\u65b9\u304c\u7a7a\u914d\u5217\u306e\u5834\u5408\u306f\u7a7a\u914d\u5217\u3092\u8fd4\u3059\u3002</p> <p>\u5236\u7d04</p> <ul> <li>2\u2264m\u22642\u00d71092 \\le m \\le 2 \\times 10^92\u2264m\u22642\u00d7109</li> <li>mmm \u306f\u7d20\u6570</li> <li>2c\u2223(m\u22121)2^c | (m - 1)2c\u2223(m\u22121) \u304b\u3064 \u2223a\u2223+\u2223b\u2223\u22121\u22642c|a| + |b| - 1 \\le 2^c\u2223a\u2223+\u2223b\u2223\u22121\u22642c \u306a\u308b ccc \u304c\u5b58\u5728\u3059\u308b</li> </ul> <p>\u8a08\u7b97\u91cf</p> <p>n=\u2223a\u2223+\u2223b\u2223n = |a| + |b|n=\u2223a\u2223+\u2223b\u2223 \u3068\u3057\u3066</p> <ul> <li>O(nlog\u2061n+log\u2061m)O(n \\log n + \\log m)O(nlogn+logm)</li> </ul>"},{"location":"apis/convolution/","title":"Index","text":"<p>APIs &gt; convolution</p>"},{"location":"apis/convolution/#convolution","title":"convolution","text":"<p>\u7573\u307f\u8fbc\u307f\u3092\u884c\u3046\u3002\u6570\u5217 a0,a1,\u2026,aN\u22121a_0, a_1, \\dots, a_{N - 1}a0\u200b,a1\u200b,\u2026,aN\u22121\u200b \u3068\u6570\u5217 a0,a1,\u2026,aM\u22121a_0, a_1, \\dots, a_{M - 1}a0\u200b,a1\u200b,\u2026,aM\u22121\u200b \u304b\u3089\u3001\u9577\u3055 N+M\u22121N + M - 1N+M\u22121 \u306e\u6570\u5217</p> <p>ci=\u2211j=0iajbi\u2212j c_i = \\sum_{j=0}^{i} {a_j b_{i-j}} ci\u200b=j=0\u2211i\u200baj\u200bbi\u2212j\u200b</p> <p>\u3092\u8a08\u7b97\u3059\u308b\u3002</p>"},{"location":"apis/convolution/#functions","title":"Functions","text":"<ul> <li><code>convolution_int</code></li> <li><code>convolution_mod</code></li> </ul>"},{"location":"apis/dsu/DSU/","title":"DSU","text":"<p>APIs &gt; dsu &gt; DSU.md</p>"},{"location":"apis/dsu/DSU/#dsu","title":"DSU","text":"<pre><code>struct DSU\n</code></pre> <p>\u7d20\u96c6\u5408\u30c7\u30fc\u30bf\u69cb\u9020</p>"},{"location":"apis/dsu/DSU/#methods","title":"Methods","text":""},{"location":"apis/dsu/DSU/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int)\n</code></pre> <p>nnn \u9802\u70b9 000 \u8fba\u306e\u7121\u5411\u30b0\u30e9\u30d5\u3092\u4f5c\u308b\u3002</p> <p>\u5236\u7d04</p> <ul> <li>0\u2264n\u22641080 \\le n \\le 10^80\u2264n\u2264108</li> </ul> <p>\u8a08\u7b97\u91cf</p> <ul> <li>O(n)O(n)O(n)</li> </ul>"},{"location":"apis/dsu/DSU/#merge","title":"<code>merge</code>","text":"<pre><code>merge(mut self, a: Int, b: Int) -&gt; Int\n</code></pre> <p>\u8fba (a,b)(a, b)(a,b) \u3092\u8db3\u3059\u3002</p> <p>a,ba, ba,b \u304c\u9023\u7d50\u3060\u3063\u305f\u5834\u5408\u306f\u305d\u306e\u4ee3\u8868\u5143\u3001\u975e\u9023\u7d50\u3060\u3063\u305f\u5834\u5408\u306f\u65b0\u305f\u306a\u4ee3\u8868\u5143\u3092\u8fd4\u3059\u3002</p> <p>\u5236\u7d04</p> <ul> <li>0\u2264a&lt;n0 \\le a \\lt n0\u2264a&lt;n</li> <li>0\u2264b&lt;n0 \\le b \\lt n0\u2264b&lt;n</li> </ul> <p>\u8a08\u7b97\u91cf</p> <ul> <li>\u511f\u5374 O(\u03b1(n))O(\\alpha(n))O(\u03b1(n))</li> </ul>"},{"location":"apis/dsu/DSU/#same","title":"<code>same</code>","text":"<pre><code>same(mut self, a: Int, b: Int) -&gt; Bool\n</code></pre>"},{"location":"apis/dsu/DSU/#leader","title":"<code>leader</code>","text":"<pre><code>leader(mut self, a: Int) -&gt; Int\n</code></pre>"},{"location":"apis/dsu/DSU/#size","title":"<code>size</code>","text":"<pre><code>size(mut self, a: Int) -&gt; Int\n</code></pre>"},{"location":"apis/dsu/DSU/#groups","title":"<code>groups</code>","text":"<pre><code>groups(mut self) -&gt; List[List[Int]]\n</code></pre>"},{"location":"apis/dsu/","title":"Index","text":"<p>APIs &gt; dsu</p>"},{"location":"apis/dsu/#dsu","title":"dsu","text":""},{"location":"apis/dsu/#aliases","title":"Aliases","text":"<ul> <li><code>UnionFind = DSU</code></li> </ul>"},{"location":"apis/dsu/#structs","title":"Structs","text":"<ul> <li><code>DSU</code></li> </ul>"},{"location":"apis/ext/","title":"Index","text":"<p>APIs &gt; ext</p>"},{"location":"apis/ext/#ext","title":"ext","text":""},{"location":"apis/ext/#packages","title":"Packages","text":"<ul> <li>data_structure</li> <li>dp</li> <li>math</li> </ul>"},{"location":"apis/ext/data_structure/","title":"Index","text":"<p>APIs &gt; ext &gt; data_structure</p>"},{"location":"apis/ext/data_structure/#data_structure","title":"data_structure","text":""},{"location":"apis/ext/data_structure/#modules","title":"Modules","text":"<ul> <li>avltree</li> <li>dualsegtree</li> <li>interval_heap</li> <li>potentialized_unionfind</li> <li>priority_queue</li> </ul>"},{"location":"apis/ext/data_structure/avltree/AVLTree/","title":"AVLTree","text":"<p>APIs &gt; ext &gt; data_structure &gt; avltree &gt; AVLTree.md</p>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#avltree","title":"AVLTree","text":"<pre><code>struct AVLTree[T: HasLtCollectionElement]\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#methods","title":"Methods","text":""},{"location":"apis/ext/data_structure/avltree/AVLTree/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self)\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#__bool__","title":"<code>__bool__</code>","text":"<pre><code>__bool__(self) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#__len__","title":"<code>__len__</code>","text":"<pre><code>__len__(self) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#clear","title":"<code>clear</code>","text":"<pre><code>clear(mut self)\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#bisect_left","title":"<code>bisect_left</code>","text":"<pre><code>bisect_left(self, v: T) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#bisect_right","title":"<code>bisect_right</code>","text":"<pre><code>bisect_right(self, v: T) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#__getitem__","title":"<code>__getitem__</code>","text":"<pre><code>__getitem__(self, i: Int) -&gt; T\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#__contains__","title":"<code>__contains__</code>","text":"<pre><code>__contains__(self, v: T) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#add","title":"<code>add</code>","text":"<pre><code>add(mut self, v: T)\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#remove","title":"<code>remove</code>","text":"<pre><code>remove(mut self, v: T)\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTree/#discard","title":"<code>discard</code>","text":"<pre><code>discard(mut self, v: T)\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNode/","title":"AVLTreeNode","text":"<p>APIs &gt; ext &gt; data_structure &gt; avltree &gt; AVLTreeNode.md</p>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNode/#avltreenode","title":"AVLTreeNode","text":"<pre><code>struct AVLTreeNode[T: HasLtCollectionElement]\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNode/#methods","title":"Methods","text":""},{"location":"apis/ext/data_structure/avltree/AVLTreeNode/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, key: T)\n__init__(out self, key: T, idx: AVLTreeNodePointer, par: AVLTreeNodePointer)\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNodePointer/","title":"AVLTreeNodePointer","text":"<p>APIs &gt; ext &gt; data_structure &gt; avltree &gt; AVLTreeNodePointer.md</p>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNodePointer/#avltreenodepointer","title":"AVLTreeNodePointer","text":"<pre><code>struct AVLTreeNodePointer\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNodePointer/#methods","title":"Methods","text":""},{"location":"apis/ext/data_structure/avltree/AVLTreeNodePointer/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, x: Int)\n__init__(out self)\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNodePointer/#__bool__","title":"<code>__bool__</code>","text":"<pre><code>__bool__(self) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNodePointer/#__eq__","title":"<code>__eq__</code>","text":"<pre><code>__eq__(self, o: Self) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/AVLTreeNodePointer/#__ne__","title":"<code>__ne__</code>","text":"<pre><code>__ne__(self, o: Self) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/avltree/","title":"Index","text":"<p>APIs &gt; ext &gt; data_structure &gt; avltree</p>"},{"location":"apis/ext/data_structure/avltree/#avltree","title":"avltree","text":""},{"location":"apis/ext/data_structure/avltree/#structs","title":"Structs","text":"<ul> <li><code>AVLTree</code></li> <li><code>AVLTreeNode</code></li> <li><code>AVLTreeNodePointer</code></li> </ul>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/","title":"DualSegTree","text":"<p>APIs &gt; ext &gt; data_structure &gt; dualsegtree &gt; DualSegTree.md</p>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#dualsegtree","title":"DualSegTree","text":"<pre><code>struct DualSegTree[S: CollectionElement, F: CollectionElement]\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#methods","title":"Methods","text":""},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int, e: S, mapping: fn (F, S) -&gt; S, composition: fn (F, F) -&gt; F, id: F)\n__init__(out self, v: List[S], mapping: fn (F, S) -&gt; S, composition: fn (F, F) -&gt; F, id: F)\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#set","title":"<code>set</code>","text":"<pre><code>set(mut self, p: Int, x: S)\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#get","title":"<code>get</code>","text":"<pre><code>get(mut self, p: Int) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#apply","title":"<code>apply</code>","text":"<pre><code>apply(mut self, p: Int, f: F)\napply(mut self, l: Int, r: Int, f: F)\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#all_apply","title":"<code>all_apply</code>","text":"<pre><code>all_apply(mut self, k: Int, f: F)\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/DualSegTree/#push","title":"<code>push</code>","text":"<pre><code>push(mut self, k: Int)\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/RAddQ/","title":"RAddQ","text":"<p>APIs &gt; ext &gt; data_structure &gt; dualsegtree &gt; RAddQ.md</p>"},{"location":"apis/ext/data_structure/dualsegtree/RAddQ/#raddq","title":"RAddQ","text":"<pre><code>RAddQ[S: AddMonoid](n: Int) -&gt; DualSegTree[S, S]\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/RUpdateQ/","title":"RUpdateQ","text":"<p>APIs &gt; ext &gt; data_structure &gt; dualsegtree &gt; RUpdateQ.md</p>"},{"location":"apis/ext/data_structure/dualsegtree/RUpdateQ/#rupdateq","title":"RUpdateQ","text":"<pre><code>RUpdateQ[S: CollectionElement](n: Int, e: S) -&gt; DualSegTree[S, Optional[S]]\n</code></pre>"},{"location":"apis/ext/data_structure/dualsegtree/","title":"Index","text":"<p>APIs &gt; ext &gt; data_structure &gt; dualsegtree</p>"},{"location":"apis/ext/data_structure/dualsegtree/#dualsegtree","title":"dualsegtree","text":""},{"location":"apis/ext/data_structure/dualsegtree/#structs","title":"Structs","text":"<ul> <li><code>DualSegTree</code></li> </ul>"},{"location":"apis/ext/data_structure/dualsegtree/#functions","title":"Functions","text":"<ul> <li><code>RAddQ</code></li> <li><code>RUpdateQ</code></li> </ul>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/","title":"IntervalHeap","text":"<p>APIs &gt; ext &gt; data_structure &gt; interval_heap &gt; IntervalHeap.md</p>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#intervalheap","title":"IntervalHeap","text":"<pre><code>struct IntervalHeap[S: HasLtCollectionElement]\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#methods","title":"Methods","text":""},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self)\n__init__(out self, data: List[S])\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#min","title":"<code>min</code>","text":"<pre><code>min(self) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#max","title":"<code>max</code>","text":"<pre><code>max(self) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#pop_min","title":"<code>pop_min</code>","text":"<pre><code>pop_min(mut self) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#pop_max","title":"<code>pop_max</code>","text":"<pre><code>pop_max(mut self) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#push","title":"<code>push</code>","text":"<pre><code>push(mut self, item: S)\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#__bool__","title":"<code>__bool__</code>","text":"<pre><code>__bool__(self) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#__len__","title":"<code>__len__</code>","text":"<pre><code>__len__(self) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/IntervalHeap/#parent","title":"<code>parent</code>","text":"<pre><code>parent(k: Int) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/interval_heap/","title":"Index","text":"<p>APIs &gt; ext &gt; data_structure &gt; interval_heap</p>"},{"location":"apis/ext/data_structure/interval_heap/#interval_heap","title":"interval_heap","text":""},{"location":"apis/ext/data_structure/interval_heap/#structs","title":"Structs","text":"<ul> <li><code>IntervalHeap</code></li> </ul>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/","title":"PotentializedUnionFind","text":"<p>APIs &gt; ext &gt; data_structure &gt; potentialized_unionfind &gt; PotentializedUnionFind.md</p>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#potentializedunionfind","title":"PotentializedUnionFind","text":"<pre><code>struct PotentializedUnionFind[S: CollectionElement]\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#methods","title":"Methods","text":""},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int, op: fn (S, S) -&gt; S, e: S, inv: fn (S) -&gt; S)\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#leader","title":"<code>leader</code>","text":"<pre><code>leader(mut self, a: Int) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#merge","title":"<code>merge</code>","text":"<pre><code>merge(mut self, a: Int, b: Int, w: S) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#same","title":"<code>same</code>","text":"<pre><code>same(mut self, a: Int, b: Int) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#diff","title":"<code>diff</code>","text":"<pre><code>diff(mut self, a: Int, b: Int) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#size","title":"<code>size</code>","text":"<pre><code>size(mut self, a: Int) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/PotentializedUnionFind/#weight","title":"<code>weight</code>","text":"<pre><code>weight(mut self, a: Int) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/UnionFindMul/","title":"UnionFindMul","text":"<p>APIs &gt; ext &gt; data_structure &gt; potentialized_unionfind &gt; UnionFindMul.md</p>"},{"location":"apis/ext/data_structure/potentialized_unionfind/UnionFindMul/#unionfindmul","title":"UnionFindMul","text":"<pre><code>UnionFindMul[S: UnionFindMulElement](n: Int) -&gt; PotentializedUnionFind[S]\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/UnionFindMulElement/","title":"UnionFindMulElement","text":"<p>APIs &gt; ext &gt; data_structure &gt; potentialized_unionfind &gt; UnionFindMulElement.md</p>"},{"location":"apis/ext/data_structure/potentialized_unionfind/UnionFindMulElement/#unionfindmulelement","title":"UnionFindMulElement","text":"<pre><code>trait UnionFindMulElement(CollectionElement, HasMul, HasTruediv, HasInitInt)\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/UnionFindPlus/","title":"UnionFindPlus","text":"<p>APIs &gt; ext &gt; data_structure &gt; potentialized_unionfind &gt; UnionFindPlus.md</p>"},{"location":"apis/ext/data_structure/potentialized_unionfind/UnionFindPlus/#unionfindplus","title":"UnionFindPlus","text":"<pre><code>UnionFindPlus[S: AddGroup](n: Int) -&gt; PotentializedUnionFind[S]\n</code></pre>"},{"location":"apis/ext/data_structure/potentialized_unionfind/","title":"Index","text":"<p>APIs &gt; ext &gt; data_structure &gt; potentialized_unionfind</p>"},{"location":"apis/ext/data_structure/potentialized_unionfind/#potentialized_unionfind","title":"potentialized_unionfind","text":""},{"location":"apis/ext/data_structure/potentialized_unionfind/#structs","title":"Structs","text":"<ul> <li><code>PotentializedUnionFind</code></li> </ul>"},{"location":"apis/ext/data_structure/potentialized_unionfind/#traits","title":"Traits","text":"<ul> <li><code>UnionFindMulElement</code></li> </ul>"},{"location":"apis/ext/data_structure/potentialized_unionfind/#functions","title":"Functions","text":"<ul> <li><code>UnionFindMul</code></li> <li><code>UnionFindPlus</code></li> </ul>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/","title":"PriorityQueue","text":"<p>APIs &gt; ext &gt; data_structure &gt; priority_queue &gt; PriorityQueue.md</p>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#priorityqueue","title":"PriorityQueue","text":"<pre><code>struct PriorityQueue[S: CollectionElement]\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#methods","title":"Methods","text":""},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, comp: fn (S, S) -&gt; Bool)\n__init__(out self, data: List[S], comp: fn (S, S) -&gt; Bool)\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#top","title":"<code>top</code>","text":"<pre><code>top(self) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#push","title":"<code>push</code>","text":"<pre><code>push(mut self, item: S)\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#pop","title":"<code>pop</code>","text":"<pre><code>pop(mut self) -&gt; S\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#clear","title":"<code>clear</code>","text":"<pre><code>clear(mut self)\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#__bool__","title":"<code>__bool__</code>","text":"<pre><code>__bool__(self) -&gt; Bool\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/PriorityQueue/#__len__","title":"<code>__len__</code>","text":"<pre><code>__len__(self) -&gt; Int\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/heap_max/","title":"heap_max","text":"<p>APIs &gt; ext &gt; data_structure &gt; priority_queue &gt; heap_max.md</p>"},{"location":"apis/ext/data_structure/priority_queue/heap_max/#heap_max","title":"heap_max","text":"<pre><code>heap_max[S: HasLtCollectionElement]() -&gt; PriorityQueue[S]\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/heap_min/","title":"heap_min","text":"<p>APIs &gt; ext &gt; data_structure &gt; priority_queue &gt; heap_min.md</p>"},{"location":"apis/ext/data_structure/priority_queue/heap_min/#heap_min","title":"heap_min","text":"<pre><code>heap_min[S: HasLtCollectionElement]() -&gt; PriorityQueue[S]\n</code></pre>"},{"location":"apis/ext/data_structure/priority_queue/","title":"Index","text":"<p>APIs &gt; ext &gt; data_structure &gt; priority_queue</p>"},{"location":"apis/ext/data_structure/priority_queue/#priority_queue","title":"priority_queue","text":""},{"location":"apis/ext/data_structure/priority_queue/#structs","title":"Structs","text":"<ul> <li><code>PriorityQueue</code></li> </ul>"},{"location":"apis/ext/data_structure/priority_queue/#functions","title":"Functions","text":"<ul> <li><code>heap_max</code></li> <li><code>heap_min</code></li> </ul>"},{"location":"apis/ext/dp/","title":"Index","text":"<p>APIs &gt; ext &gt; dp</p>"},{"location":"apis/ext/dp/#dp","title":"dp","text":""},{"location":"apis/ext/dp/#modules","title":"Modules","text":"<ul> <li>knapsack_problem</li> <li>levenshtein_distance_problem</li> <li>longest_increasing_subsequence_problem</li> </ul>"},{"location":"apis/ext/dp/knapsack_problem/","title":"Index","text":"<p>APIs &gt; ext &gt; dp &gt; knapsack_problem</p>"},{"location":"apis/ext/dp/knapsack_problem/#knapsack_problem","title":"knapsack_problem","text":""},{"location":"apis/ext/dp/knapsack_problem/#functions","title":"Functions","text":"<ul> <li><code>knapsack</code></li> <li><code>knapsack_01</code></li> </ul>"},{"location":"apis/ext/dp/knapsack_problem/knapsack/","title":"knapsack","text":"<p>APIs &gt; ext &gt; dp &gt; knapsack_problem &gt; knapsack.md</p>"},{"location":"apis/ext/dp/knapsack_problem/knapsack/#knapsack","title":"knapsack","text":"<pre><code>knapsack(vw: List[(Int, Int)], weight_limit: Int) -&gt; Int\n</code></pre>"},{"location":"apis/ext/dp/knapsack_problem/knapsack_01/","title":"knapsack_01","text":"<p>APIs &gt; ext &gt; dp &gt; knapsack_problem &gt; knapsack_01.md</p>"},{"location":"apis/ext/dp/knapsack_problem/knapsack_01/#knapsack_01","title":"knapsack_01","text":"<pre><code>knapsack_01(vw: List[(Int, Int)], weight_limit: Int) -&gt; Int\n</code></pre>"},{"location":"apis/ext/dp/levenshtein_distance_problem/edit_distance/","title":"edit_distance","text":"<p>APIs &gt; ext &gt; dp &gt; levenshtein_distance_problem &gt; edit_distance.md</p>"},{"location":"apis/ext/dp/levenshtein_distance_problem/edit_distance/#edit_distance","title":"edit_distance","text":"<pre><code>edit_distance[C: HasEqCollectionElement](s1: List[C], s2: List[C]) -&gt; Int\nedit_distance(s1: String, s2: String) -&gt; Int\n</code></pre>"},{"location":"apis/ext/dp/levenshtein_distance_problem/","title":"Index","text":"<p>APIs &gt; ext &gt; dp &gt; levenshtein_distance_problem</p>"},{"location":"apis/ext/dp/levenshtein_distance_problem/#levenshtein_distance_problem","title":"levenshtein_distance_problem","text":""},{"location":"apis/ext/dp/levenshtein_distance_problem/#functions","title":"Functions","text":"<ul> <li><code>edit_distance</code></li> <li><code>levenshtein_distance</code></li> </ul>"},{"location":"apis/ext/dp/levenshtein_distance_problem/levenshtein_distance/","title":"levenshtein_distance","text":"<p>APIs &gt; ext &gt; dp &gt; levenshtein_distance_problem &gt; levenshtein_distance.md</p>"},{"location":"apis/ext/dp/levenshtein_distance_problem/levenshtein_distance/#levenshtein_distance","title":"levenshtein_distance","text":"<pre><code>levenshtein_distance[C: HasEqCollectionElement](s1: List[C], s2: List[C]) -&gt; Int\nlevenshtein_distance(s1: String, s2: String) -&gt; Int\n</code></pre>"},{"location":"apis/ext/dp/longest_increasing_subsequence_problem/","title":"Index","text":"<p>APIs &gt; ext &gt; dp &gt; longest_increasing_subsequence_problem</p>"},{"location":"apis/ext/dp/longest_increasing_subsequence_problem/#longest_increasing_subsequence_problem","title":"longest_increasing_subsequence_problem","text":""},{"location":"apis/ext/dp/longest_increasing_subsequence_problem/#functions","title":"Functions","text":"<ul> <li><code>longest_increasing_subsequence</code></li> </ul>"},{"location":"apis/ext/dp/longest_increasing_subsequence_problem/longest_increasing_subsequence/","title":"longest_increasing_subsequence","text":"<p>APIs &gt; ext &gt; dp &gt; longest_increasing_subsequence_problem &gt; longest_increasing_subsequence.md</p>"},{"location":"apis/ext/dp/longest_increasing_subsequence_problem/longest_increasing_subsequence/#longest_increasing_subsequence","title":"longest_increasing_subsequence","text":"<pre><code>longest_increasing_subsequence(a: List[Int]) -&gt; List[Int]\n</code></pre>"},{"location":"apis/ext/math/","title":"Index","text":"<p>APIs &gt; ext &gt; math</p>"},{"location":"apis/ext/math/#math","title":"math","text":""},{"location":"apis/ext/math/#modules","title":"Modules","text":"<ul> <li>affine</li> </ul>"},{"location":"apis/ext/math/affine/Affine/","title":"Affine","text":"<p>APIs &gt; ext &gt; math &gt; affine &gt; Affine.md</p>"},{"location":"apis/ext/math/affine/Affine/#affine","title":"Affine","text":"<pre><code>struct Affine[T: AffineElement]\n</code></pre>"},{"location":"apis/ext/math/affine/Affine/#methods","title":"Methods","text":""},{"location":"apis/ext/math/affine/Affine/#assign","title":"<code>assign</code>","text":"<pre><code>assign(self, x: T) -&gt; T\nassign(self, o: Self) -&gt; Self\n</code></pre>"},{"location":"apis/ext/math/affine/AffineElement/","title":"AffineElement","text":"<p>APIs &gt; ext &gt; math &gt; affine &gt; AffineElement.md</p>"},{"location":"apis/ext/math/affine/AffineElement/#affineelement","title":"AffineElement","text":"<pre><code>trait AffineElement(HasAdd, HasMul, CollectionElement)\n</code></pre>"},{"location":"apis/ext/math/affine/","title":"Index","text":"<p>APIs &gt; ext &gt; math &gt; affine</p>"},{"location":"apis/ext/math/affine/#affine","title":"affine","text":""},{"location":"apis/ext/math/affine/#structs","title":"Structs","text":"<ul> <li><code>Affine</code></li> </ul>"},{"location":"apis/ext/math/affine/#traits","title":"Traits","text":"<ul> <li><code>AffineElement</code></li> </ul>"},{"location":"apis/fenwicktree/FenwickTree/","title":"FenwickTree","text":"<p>APIs &gt; fenwicktree &gt; FenwickTree.md</p>"},{"location":"apis/fenwicktree/FenwickTree/#fenwicktree","title":"FenwickTree","text":"<pre><code>struct FenwickTree[T: AddGroup]\n</code></pre>"},{"location":"apis/fenwicktree/FenwickTree/#methods","title":"Methods","text":""},{"location":"apis/fenwicktree/FenwickTree/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int)\n__init__(out self, v: List[T])\n</code></pre>"},{"location":"apis/fenwicktree/FenwickTree/#add","title":"<code>add</code>","text":"<pre><code>add(mut self, p: Int, x: T)\n</code></pre>"},{"location":"apis/fenwicktree/FenwickTree/#sum","title":"<code>sum</code>","text":"<pre><code>sum(self, left: Int, right: Int) -&gt; T\n</code></pre>"},{"location":"apis/fenwicktree/","title":"Index","text":"<p>APIs &gt; fenwicktree</p>"},{"location":"apis/fenwicktree/#fenwicktree","title":"fenwicktree","text":""},{"location":"apis/fenwicktree/#structs","title":"Structs","text":"<ul> <li><code>FenwickTree</code></li> </ul>"},{"location":"apis/io/HasInitStringRaisingCollectionElement/","title":"HasInitStringRaisingCollectionElement","text":"<p>APIs &gt; io &gt; HasInitStringRaisingCollectionElement.md</p>"},{"location":"apis/io/HasInitStringRaisingCollectionElement/#hasinitstringraisingcollectionelement","title":"HasInitStringRaisingCollectionElement","text":"<pre><code>trait HasInitStringRaisingCollectionElement(HasInitStringRaising, CollectionElement)\n</code></pre>"},{"location":"apis/io/IO/","title":"IO","text":"<p>APIs &gt; io &gt; IO.md</p>"},{"location":"apis/io/IO/#io","title":"IO","text":"<pre><code>struct IO\n</code></pre>"},{"location":"apis/io/IO/#methods","title":"Methods","text":""},{"location":"apis/io/IO/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self) raises\n</code></pre>"},{"location":"apis/io/IO/#next","title":"<code>next</code>","text":"<pre><code>next(mut self) -&gt; String\n</code></pre>"},{"location":"apis/io/IO/#readline","title":"<code>readline</code>","text":"<pre><code>readline(mut self) -&gt; String\n</code></pre>"},{"location":"apis/io/IO/#nextint","title":"<code>nextInt</code>","text":"<pre><code>nextInt(mut self) raises -&gt; Int\n</code></pre>"},{"location":"apis/io/IO/#nextlistint","title":"<code>nextListInt</code>","text":"<pre><code>nextListInt(mut self, n: Int) raises -&gt; List[Int]\n</code></pre>"},{"location":"apis/io/IO/#nextlist","title":"<code>nextList</code>","text":"<pre><code>nextList[T: HasInitStringRaisingCollectionElement](mut self, n: Int) raises -&gt; List[T]\n</code></pre>"},{"location":"apis/io/IO/#print","title":"<code>print</code>","text":"<pre><code>print[S: WritableCollectionElement](v: List[S])\n</code></pre>"},{"location":"apis/io/","title":"Index","text":"<p>APIs &gt; io</p>"},{"location":"apis/io/#io","title":"io","text":""},{"location":"apis/io/#structs","title":"Structs","text":"<ul> <li><code>IO</code></li> </ul>"},{"location":"apis/io/#traits","title":"Traits","text":"<ul> <li><code>HasInitStringRaisingCollectionElement</code></li> </ul>"},{"location":"apis/lazysegtree/LazySegTree/","title":"LazySegTree","text":"<p>APIs &gt; lazysegtree &gt; LazySegTree.md</p>"},{"location":"apis/lazysegtree/LazySegTree/#lazysegtree","title":"LazySegTree","text":"<pre><code>struct LazySegTree[S: CollectionElement, F: CollectionElement]\n</code></pre>"},{"location":"apis/lazysegtree/LazySegTree/#methods","title":"Methods","text":""},{"location":"apis/lazysegtree/LazySegTree/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int, op: fn (S, S) -&gt; S, e: S, mapping: fn (F, S) -&gt; S, composition: fn (F, F) -&gt; F, id: F)\n__init__(out self, v: List[S], op: fn (S, S) -&gt; S, e: S, mapping: fn (F, S) -&gt; S, composition: fn (F, F) -&gt; F, id: F)\n</code></pre>"},{"location":"apis/lazysegtree/LazySegTree/#set","title":"<code>set</code>","text":"<pre><code>set(mut self, p: Int, x: S)\n</code></pre>"},{"location":"apis/lazysegtree/LazySegTree/#get","title":"<code>get</code>","text":"<pre><code>get(mut self, p: Int) -&gt; S\n</code></pre>"},{"location":"apis/lazysegtree/LazySegTree/#prod","title":"<code>prod</code>","text":"<pre><code>prod(mut self, l: Int, r: Int) -&gt; S\n</code></pre>"},{"location":"apis/lazysegtree/LazySegTree/#all_prod","title":"<code>all_prod</code>","text":"<pre><code>all_prod(self) -&gt; S\n</code></pre>"},{"location":"apis/lazysegtree/LazySegTree/#apply","title":"<code>apply</code>","text":"<pre><code>apply(mut self, p: Int, f: F)\napply(mut self, l: Int, r: Int, f: F)\n</code></pre>"},{"location":"apis/lazysegtree/RUpdateMinQ/","title":"RUpdateMinQ","text":"<p>APIs &gt; lazysegtree &gt; RUpdateMinQ.md</p>"},{"location":"apis/lazysegtree/RUpdateMinQ/#rupdateminq","title":"RUpdateMinQ","text":"<pre><code>RUpdateMinQ[S: HasLtCollectionElement](n: Int, e: S) -&gt; LazySegTree[S, Optional[S]]\n</code></pre>"},{"location":"apis/lazysegtree/","title":"Index","text":"<p>APIs &gt; lazysegtree</p>"},{"location":"apis/lazysegtree/#lazysegtree","title":"lazysegtree","text":""},{"location":"apis/lazysegtree/#structs","title":"Structs","text":"<ul> <li><code>LazySegTree</code></li> </ul>"},{"location":"apis/lazysegtree/#functions","title":"Functions","text":"<ul> <li><code>RUpdateMinQ</code></li> </ul>"},{"location":"apis/math/crt/","title":"crt","text":"<p>APIs &gt; math &gt; crt.md</p>"},{"location":"apis/math/crt/#crt","title":"crt","text":"<pre><code>crt(r: List[Int], m: List[Int]) -&gt; (Int, Int)\n</code></pre>"},{"location":"apis/math/floor_sum/","title":"floor_sum","text":"<p>APIs &gt; math &gt; floor_sum.md</p>"},{"location":"apis/math/floor_sum/#floor_sum","title":"floor_sum","text":"<pre><code>floor_sum(n: Int, m: Int, a: Int, b: Int) -&gt; Int\n</code></pre>"},{"location":"apis/math/","title":"Index","text":"<p>APIs &gt; math</p>"},{"location":"apis/math/#math","title":"math","text":""},{"location":"apis/math/#functions","title":"Functions","text":"<ul> <li><code>crt</code></li> <li><code>floor_sum</code></li> <li><code>inv_mod</code></li> </ul>"},{"location":"apis/math/inv_mod/","title":"inv_mod","text":"<p>APIs &gt; math &gt; inv_mod.md</p>"},{"location":"apis/math/inv_mod/#inv_mod","title":"inv_mod","text":"<pre><code>inv_mod(x: Int, m: Int) -&gt; Int\n</code></pre>"},{"location":"apis/maxflow/Capable/","title":"Capable","text":"<p>APIs &gt; maxflow &gt; Capable.md</p>"},{"location":"apis/maxflow/Capable/#capable","title":"Capable","text":"<pre><code>trait Capable(CollectionElement, Defaultable, HasAdd, HasSub, Comparable)\n</code></pre>"},{"location":"apis/maxflow/Edge/","title":"Edge","text":"<p>APIs &gt; maxflow &gt; Edge.md</p>"},{"location":"apis/maxflow/Edge/#edge","title":"Edge","text":"<pre><code>struct Edge[Cap: Capable]\n</code></pre>"},{"location":"apis/maxflow/MFGraph/","title":"MFGraph","text":"<p>APIs &gt; maxflow &gt; MFGraph.md</p>"},{"location":"apis/maxflow/MFGraph/#mfgraph","title":"MFGraph","text":"<pre><code>struct MFGraph[Cap: Capable]\n</code></pre>"},{"location":"apis/maxflow/MFGraph/#methods","title":"Methods","text":""},{"location":"apis/maxflow/MFGraph/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int)\n</code></pre>"},{"location":"apis/maxflow/MFGraph/#add_edge","title":"<code>add_edge</code>","text":"<pre><code>add_edge(mut self, src: Int, dst: Int, cap: Cap) -&gt; Int\n</code></pre>"},{"location":"apis/maxflow/MFGraph/#get_edge","title":"<code>get_edge</code>","text":"<pre><code>get_edge(self, i: Int) -&gt; Edge[Cap]\n</code></pre>"},{"location":"apis/maxflow/MFGraph/#edges","title":"<code>edges</code>","text":"<pre><code>edges(self) -&gt; List[Edge[Cap]]\n</code></pre>"},{"location":"apis/maxflow/MFGraph/#change_edge","title":"<code>change_edge</code>","text":"<pre><code>change_edge(mut self, i: Int, new_cap: Cap, new_flow: Cap)\n</code></pre>"},{"location":"apis/maxflow/MFGraph/#flow","title":"<code>flow</code>","text":"<pre><code>flow(mut self, s: Int, t: Int, flow_limit: Cap) -&gt; Cap\n</code></pre>"},{"location":"apis/maxflow/","title":"Index","text":"<p>APIs &gt; maxflow</p>"},{"location":"apis/maxflow/#maxflow","title":"maxflow","text":""},{"location":"apis/maxflow/#structs","title":"Structs","text":"<ul> <li><code>Edge</code></li> <li><code>MFGraph</code></li> </ul>"},{"location":"apis/maxflow/#traits","title":"Traits","text":"<ul> <li><code>Capable</code></li> </ul>"},{"location":"apis/method_traits/AddGroup/","title":"AddGroup","text":"<p>APIs &gt; method_traits &gt; AddGroup.md</p>"},{"location":"apis/method_traits/AddGroup/#addgroup","title":"AddGroup","text":"<pre><code>trait AddGroup(AddMonoid, HasNeg)\n</code></pre>"},{"location":"apis/method_traits/AddMonoid/","title":"AddMonoid","text":"<p>APIs &gt; method_traits &gt; AddMonoid.md</p>"},{"location":"apis/method_traits/AddMonoid/#addmonoid","title":"AddMonoid","text":"<pre><code>trait AddMonoid(CollectionElement, Defaultable, HasAdd)\n</code></pre>"},{"location":"apis/method_traits/HasAdd/","title":"HasAdd","text":"<p>APIs &gt; method_traits &gt; HasAdd.md</p>"},{"location":"apis/method_traits/HasAdd/#hasadd","title":"HasAdd","text":"<pre><code>trait HasAdd\n</code></pre>"},{"location":"apis/method_traits/HasAdd/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasAdd/#__add__","title":"<code>__add__</code>","text":"<pre><code>__add__(self, x: Self) -&gt; Self\n</code></pre>"},{"location":"apis/method_traits/HasEq/","title":"HasEq","text":"<p>APIs &gt; method_traits &gt; HasEq.md</p>"},{"location":"apis/method_traits/HasEq/#haseq","title":"HasEq","text":"<pre><code>trait HasEq\n</code></pre>"},{"location":"apis/method_traits/HasEq/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasEq/#__eq__","title":"<code>__eq__</code>","text":"<pre><code>__eq__(self, x: Self) -&gt; Bool\n</code></pre>"},{"location":"apis/method_traits/HasEqCollectionElement/","title":"HasEqCollectionElement","text":"<p>APIs &gt; method_traits &gt; HasEqCollectionElement.md</p>"},{"location":"apis/method_traits/HasEqCollectionElement/#haseqcollectionelement","title":"HasEqCollectionElement","text":"<pre><code>trait HasEqCollectionElement(CollectionElement, HasEq)\n</code></pre>"},{"location":"apis/method_traits/HasInitInt/","title":"HasInitInt","text":"<p>APIs &gt; method_traits &gt; HasInitInt.md</p>"},{"location":"apis/method_traits/HasInitInt/#hasinitint","title":"HasInitInt","text":"<pre><code>trait HasInitInt\n</code></pre>"},{"location":"apis/method_traits/HasInitInt/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasInitInt/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, x: Int)\n</code></pre>"},{"location":"apis/method_traits/HasInitStringRaising/","title":"HasInitStringRaising","text":"<p>APIs &gt; method_traits &gt; HasInitStringRaising.md</p>"},{"location":"apis/method_traits/HasInitStringRaising/#hasinitstringraising","title":"HasInitStringRaising","text":"<pre><code>trait HasInitStringRaising\n</code></pre>"},{"location":"apis/method_traits/HasInitStringRaising/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasInitStringRaising/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, x: String) raises\n</code></pre>"},{"location":"apis/method_traits/HasLtCollectionElement/","title":"HasLtCollectionElement","text":"<p>APIs &gt; method_traits &gt; HasLtCollectionElement.md</p>"},{"location":"apis/method_traits/HasLtCollectionElement/#hasltcollectionelement","title":"HasLtCollectionElement","text":"<pre><code>trait HasLtCollectionElement(CollectionElement, LessThanComparable)\n</code></pre>"},{"location":"apis/method_traits/HasMul/","title":"HasMul","text":"<p>APIs &gt; method_traits &gt; HasMul.md</p>"},{"location":"apis/method_traits/HasMul/#hasmul","title":"HasMul","text":"<pre><code>trait HasMul\n</code></pre>"},{"location":"apis/method_traits/HasMul/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasMul/#__mul__","title":"<code>__mul__</code>","text":"<pre><code>__mul__(self, x: Self) -&gt; Self\n</code></pre>"},{"location":"apis/method_traits/HasNeg/","title":"HasNeg","text":"<p>APIs &gt; method_traits &gt; HasNeg.md</p>"},{"location":"apis/method_traits/HasNeg/#hasneg","title":"HasNeg","text":"<pre><code>trait HasNeg\n</code></pre>"},{"location":"apis/method_traits/HasNeg/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasNeg/#__neg__","title":"<code>__neg__</code>","text":"<pre><code>__neg__(self) -&gt; Self\n</code></pre>"},{"location":"apis/method_traits/HasSub/","title":"HasSub","text":"<p>APIs &gt; method_traits &gt; HasSub.md</p>"},{"location":"apis/method_traits/HasSub/#hassub","title":"HasSub","text":"<pre><code>trait HasSub\n</code></pre>"},{"location":"apis/method_traits/HasSub/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasSub/#__sub__","title":"<code>__sub__</code>","text":"<pre><code>__sub__(self, x: Self) -&gt; Self\n</code></pre>"},{"location":"apis/method_traits/HasTruediv/","title":"HasTruediv","text":"<p>APIs &gt; method_traits &gt; HasTruediv.md</p>"},{"location":"apis/method_traits/HasTruediv/#hastruediv","title":"HasTruediv","text":"<pre><code>trait HasTruediv\n</code></pre>"},{"location":"apis/method_traits/HasTruediv/#methods","title":"Methods","text":""},{"location":"apis/method_traits/HasTruediv/#__truediv__","title":"<code>__truediv__</code>","text":"<pre><code>__truediv__(self, x: Self) -&gt; Self\n</code></pre>"},{"location":"apis/method_traits/MulMonoid/","title":"MulMonoid","text":"<p>APIs &gt; method_traits &gt; MulMonoid.md</p>"},{"location":"apis/method_traits/MulMonoid/#mulmonoid","title":"MulMonoid","text":"<pre><code>trait MulMonoid(CollectionElement, HasInitInt, HasMul)\n</code></pre>"},{"location":"apis/method_traits/","title":"Index","text":"<p>APIs &gt; method_traits</p>"},{"location":"apis/method_traits/#method_traits","title":"method_traits","text":""},{"location":"apis/method_traits/#traits","title":"Traits","text":"<ul> <li><code>AddGroup</code></li> <li><code>AddMonoid</code></li> <li><code>HasAdd</code></li> <li><code>HasEq</code></li> <li><code>HasEqCollectionElement</code></li> <li><code>HasInitInt</code></li> <li><code>HasInitStringRaising</code></li> <li><code>HasLtCollectionElement</code></li> <li><code>HasMul</code></li> <li><code>HasNeg</code></li> <li><code>HasSub</code></li> <li><code>HasTruediv</code></li> <li><code>MulMonoid</code></li> </ul>"},{"location":"apis/mincostflow/Edge/","title":"Edge","text":"<p>APIs &gt; mincostflow &gt; Edge.md</p>"},{"location":"apis/mincostflow/Edge/#edge","title":"Edge","text":"<pre><code>struct Edge\n</code></pre>"},{"location":"apis/mincostflow/MCFGraph/","title":"MCFGraph","text":"<p>APIs &gt; mincostflow &gt; MCFGraph.md</p>"},{"location":"apis/mincostflow/MCFGraph/#mcfgraph","title":"MCFGraph","text":"<pre><code>struct MCFGraph\n</code></pre>"},{"location":"apis/mincostflow/MCFGraph/#methods","title":"Methods","text":""},{"location":"apis/mincostflow/MCFGraph/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int)\n</code></pre>"},{"location":"apis/mincostflow/MCFGraph/#add_edge","title":"<code>add_edge</code>","text":"<pre><code>add_edge(mut self, src: Int, dst: Int, cap: Cap, cost: Cost) -&gt; Int\n</code></pre>"},{"location":"apis/mincostflow/MCFGraph/#get_edge","title":"<code>get_edge</code>","text":"<pre><code>get_edge(self, i: Int) -&gt; Edge\n</code></pre>"},{"location":"apis/mincostflow/MCFGraph/#edges","title":"<code>edges</code>","text":"<pre><code>edges(self) -&gt; List[Edge]\n</code></pre>"},{"location":"apis/mincostflow/MCFGraph/#flow","title":"<code>flow</code>","text":"<pre><code>flow(mut self, s: Int, t: Int, flow_limit: Cap) -&gt; (Cap, Cost)\n</code></pre>"},{"location":"apis/mincostflow/MCFGraph/#slope","title":"<code>slope</code>","text":"<pre><code>slope(mut self, s: Int, t: Int, flow_limit: Cap) -&gt; List[(Cap, Cost)]\n</code></pre>"},{"location":"apis/mincostflow/","title":"Index","text":"<p>APIs &gt; mincostflow</p>"},{"location":"apis/mincostflow/#mincostflow","title":"mincostflow","text":""},{"location":"apis/mincostflow/#aliases","title":"Aliases","text":"<ul> <li><code>Cap = Int</code></li> <li><code>Cost = Int</code></li> </ul>"},{"location":"apis/mincostflow/#structs","title":"Structs","text":"<ul> <li><code>Edge</code></li> <li><code>MCFGraph</code></li> </ul>"},{"location":"apis/modint/StaticModint/","title":"StaticModint","text":"<p>APIs &gt; modint &gt; StaticModint.md</p>"},{"location":"apis/modint/StaticModint/#staticmodint","title":"StaticModint","text":"<pre><code>struct StaticModint[M: Int]\n</code></pre>"},{"location":"apis/modint/StaticModint/#methods","title":"Methods","text":""},{"location":"apis/modint/StaticModint/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self)\n__init__(out self, v: Int)\n__init__(out self, v: UInt64)\n__init__(out self, v: String) raises\n</code></pre>"},{"location":"apis/modint/StaticModint/#__copyinit__","title":"<code>__copyinit__</code>","text":"<pre><code>__copyinit__(out self, o: Self)\n</code></pre>"},{"location":"apis/modint/StaticModint/#__moveinit__","title":"<code>__moveinit__</code>","text":"<pre><code>__moveinit__(out self, owned o: Self)\n</code></pre>"},{"location":"apis/modint/StaticModint/#val","title":"<code>val</code>","text":"<pre><code>val(self) -&gt; Int\n</code></pre>"},{"location":"apis/modint/StaticModint/#valu64","title":"<code>valu64</code>","text":"<pre><code>valu64(self) -&gt; UInt64\n</code></pre>"},{"location":"apis/modint/StaticModint/#__iadd__","title":"<code>__iadd__</code>","text":"<pre><code>__iadd__(mut self, rhs: Self)\n__iadd__(mut self, rhs: Int)\n</code></pre>"},{"location":"apis/modint/StaticModint/#__isub__","title":"<code>__isub__</code>","text":"<pre><code>__isub__(mut self, rhs: Self)\n__isub__(mut self, rhs: Int)\n</code></pre>"},{"location":"apis/modint/StaticModint/#__imul__","title":"<code>__imul__</code>","text":"<pre><code>__imul__(mut self, rhs: Self)\n__imul__(mut self, rhs: Int)\n</code></pre>"},{"location":"apis/modint/StaticModint/#__itruediv__","title":"<code>__itruediv__</code>","text":"<pre><code>__itruediv__(mut self, rhs: Self)\n__itruediv__(mut self, rhs: Int)\n</code></pre>"},{"location":"apis/modint/StaticModint/#__pos__","title":"<code>__pos__</code>","text":"<pre><code>__pos__(self) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#__neg__","title":"<code>__neg__</code>","text":"<pre><code>__neg__(self) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#pow","title":"<code>pow</code>","text":"<pre><code>pow(self, n: Int) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#__pow__","title":"<code>__pow__</code>","text":"<pre><code>__pow__(self, n: Int) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#inv","title":"<code>inv</code>","text":"<pre><code>inv(self) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#__add__","title":"<code>__add__</code>","text":"<pre><code>__add__(self, o: Self) -&gt; Self\n__add__(self, o: Int) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#__sub__","title":"<code>__sub__</code>","text":"<pre><code>__sub__(self, o: Self) -&gt; Self\n__sub__(self, o: Int) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#__mul__","title":"<code>__mul__</code>","text":"<pre><code>__mul__(self, o: Self) -&gt; Self\n__mul__(self, o: Int) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#__truediv__","title":"<code>__truediv__</code>","text":"<pre><code>__truediv__(self, o: Self) -&gt; Self\n__truediv__(self, o: Int) -&gt; Self\n</code></pre>"},{"location":"apis/modint/StaticModint/#__eq__","title":"<code>__eq__</code>","text":"<pre><code>__eq__(self, rhs: Self) -&gt; Bool\n__eq__(self, rhs: Int) -&gt; Bool\n</code></pre>"},{"location":"apis/modint/StaticModint/#__ne__","title":"<code>__ne__</code>","text":"<pre><code>__ne__(self, rhs: Self) -&gt; Bool\n__ne__(self, rhs: Int) -&gt; Bool\n</code></pre>"},{"location":"apis/modint/StaticModint/#write_to","title":"<code>write_to</code>","text":"<pre><code>write_to[W: Writer](self, mut writer: W)\n</code></pre>"},{"location":"apis/modint/StaticModint/#__int__","title":"<code>__int__</code>","text":"<pre><code>__int__(self) -&gt; Int\n</code></pre>"},{"location":"apis/modint/StaticModint/#mod","title":"<code>mod</code>","text":"<pre><code>mod() -&gt; Int\n</code></pre>"},{"location":"apis/modint/StaticModint/#modu64","title":"<code>modu64</code>","text":"<pre><code>modu64() -&gt; UInt64\n</code></pre>"},{"location":"apis/modint/","title":"Index","text":"<p>APIs &gt; modint</p>"},{"location":"apis/modint/#modint","title":"modint","text":""},{"location":"apis/modint/#aliases","title":"Aliases","text":"<ul> <li><code>modint1000000007 = StaticModint[1000000007]</code></li> <li><code>modint1000000009 = StaticModint[1000000009]</code></li> <li><code>modint998244353 = StaticModint[998244353]</code></li> </ul>"},{"location":"apis/modint/#structs","title":"Structs","text":"<ul> <li><code>StaticModint</code></li> </ul>"},{"location":"apis/py/","title":"Index","text":"<p>APIs &gt; py</p>"},{"location":"apis/py/#py","title":"py","text":""},{"location":"apis/py/#modules","title":"Modules","text":"<ul> <li>bisect</li> <li>builtin</li> <li>heapq</li> <li>itertools</li> <li>math</li> <li>operator</li> <li>sympy</li> </ul>"},{"location":"apis/py/bisect/bisect_left/","title":"bisect_left","text":"<p>APIs &gt; py &gt; bisect &gt; bisect_left.md</p>"},{"location":"apis/py/bisect/bisect_left/#bisect_left","title":"bisect_left","text":"<pre><code>bisect_left[T: HasLtCollectionElement](a: List[T], x: T) -&gt; Int\n</code></pre>"},{"location":"apis/py/bisect/bisect_right/","title":"bisect_right","text":"<p>APIs &gt; py &gt; bisect &gt; bisect_right.md</p>"},{"location":"apis/py/bisect/bisect_right/#bisect_right","title":"bisect_right","text":"<pre><code>bisect_right[T: HasLtCollectionElement](a: List[T], x: T) -&gt; Int\n</code></pre>"},{"location":"apis/py/bisect/","title":"Index","text":"<p>APIs &gt; py &gt; bisect</p>"},{"location":"apis/py/bisect/#bisect","title":"bisect","text":""},{"location":"apis/py/bisect/#functions","title":"Functions","text":"<ul> <li><code>bisect_left</code></li> <li><code>bisect_right</code></li> </ul>"},{"location":"apis/py/builtin/","title":"Index","text":"<p>APIs &gt; py &gt; builtin</p>"},{"location":"apis/py/builtin/#builtin","title":"builtin","text":""},{"location":"apis/py/builtin/#functions","title":"Functions","text":"<ul> <li><code>pow_mod</code></li> </ul>"},{"location":"apis/py/builtin/pow_mod/","title":"pow_mod","text":"<p>APIs &gt; py &gt; builtin &gt; pow_mod.md</p>"},{"location":"apis/py/builtin/pow_mod/#pow_mod","title":"pow_mod","text":"<pre><code>pow_mod(x: Int, n: Int, m: Int) -&gt; Int\n</code></pre>"},{"location":"apis/py/heapq/heapify/","title":"heapify","text":"<p>APIs &gt; py &gt; heapq &gt; heapify.md</p>"},{"location":"apis/py/heapq/heapify/#heapify","title":"heapify","text":"<pre><code>heapify[S: HasLtCollectionElement](mut heap: List[S])\n</code></pre>"},{"location":"apis/py/heapq/heappop/","title":"heappop","text":"<p>APIs &gt; py &gt; heapq &gt; heappop.md</p>"},{"location":"apis/py/heapq/heappop/#heappop","title":"heappop","text":"<pre><code>heappop[S: HasLtCollectionElement](mut heap: List[S]) -&gt; S\n</code></pre>"},{"location":"apis/py/heapq/heappush/","title":"heappush","text":"<p>APIs &gt; py &gt; heapq &gt; heappush.md</p>"},{"location":"apis/py/heapq/heappush/#heappush","title":"heappush","text":"<pre><code>heappush[S: HasLtCollectionElement](mut heap: List[S], item: S)\n</code></pre>"},{"location":"apis/py/heapq/heappushpop/","title":"heappushpop","text":"<p>APIs &gt; py &gt; heapq &gt; heappushpop.md</p>"},{"location":"apis/py/heapq/heappushpop/#heappushpop","title":"heappushpop","text":"<pre><code>heappushpop[S: HasLtCollectionElement](mut heap: List[S], item: S) -&gt; S\n</code></pre>"},{"location":"apis/py/heapq/heapreplace/","title":"heapreplace","text":"<p>APIs &gt; py &gt; heapq &gt; heapreplace.md</p>"},{"location":"apis/py/heapq/heapreplace/#heapreplace","title":"heapreplace","text":"<pre><code>heapreplace[S: HasLtCollectionElement](mut heap: List[S], item: S) -&gt; S\n</code></pre>"},{"location":"apis/py/heapq/","title":"Index","text":"<p>APIs &gt; py &gt; heapq</p>"},{"location":"apis/py/heapq/#heapq","title":"heapq","text":""},{"location":"apis/py/heapq/#functions","title":"Functions","text":"<ul> <li><code>heapify</code></li> <li><code>heappop</code></li> <li><code>heappush</code></li> <li><code>heappushpop</code></li> <li><code>heapreplace</code></li> </ul>"},{"location":"apis/py/itertools/","title":"Index","text":"<p>APIs &gt; py &gt; itertools</p>"},{"location":"apis/py/itertools/#itertools","title":"itertools","text":""},{"location":"apis/py/math/","title":"Index","text":"<p>APIs &gt; py &gt; math</p>"},{"location":"apis/py/math/#math","title":"math","text":""},{"location":"apis/py/math/#functions","title":"Functions","text":"<ul> <li><code>isqrt</code></li> </ul>"},{"location":"apis/py/math/isqrt/","title":"isqrt","text":"<p>APIs &gt; py &gt; math &gt; isqrt.md</p>"},{"location":"apis/py/math/isqrt/#isqrt","title":"isqrt","text":"<pre><code>isqrt(x: Int) -&gt; Int\n</code></pre>"},{"location":"apis/py/operator/add/","title":"add","text":"<p>APIs &gt; py &gt; operator &gt; add.md</p>"},{"location":"apis/py/operator/add/#add","title":"add","text":"<pre><code>add[T: HasAdd](x: T, y: T) -&gt; T\n</code></pre>"},{"location":"apis/py/operator/gt/","title":"gt","text":"<p>APIs &gt; py &gt; operator &gt; gt.md</p>"},{"location":"apis/py/operator/gt/#gt","title":"gt","text":"<pre><code>gt[T: LessThanComparable](x: T, y: T) -&gt; Bool\n</code></pre>"},{"location":"apis/py/operator/","title":"Index","text":"<p>APIs &gt; py &gt; operator</p>"},{"location":"apis/py/operator/#operator","title":"operator","text":""},{"location":"apis/py/operator/#functions","title":"Functions","text":"<ul> <li><code>add</code></li> <li><code>gt</code></li> <li><code>lt</code></li> <li><code>mul</code></li> <li><code>neg</code></li> <li><code>truediv</code></li> </ul>"},{"location":"apis/py/operator/lt/","title":"lt","text":"<p>APIs &gt; py &gt; operator &gt; lt.md</p>"},{"location":"apis/py/operator/lt/#lt","title":"lt","text":"<pre><code>lt[T: LessThanComparable](x: T, y: T) -&gt; Bool\n</code></pre>"},{"location":"apis/py/operator/mul/","title":"mul","text":"<p>APIs &gt; py &gt; operator &gt; mul.md</p>"},{"location":"apis/py/operator/mul/#mul","title":"mul","text":"<pre><code>mul[T: HasMul](x: T, y: T) -&gt; T\n</code></pre>"},{"location":"apis/py/operator/neg/","title":"neg","text":"<p>APIs &gt; py &gt; operator &gt; neg.md</p>"},{"location":"apis/py/operator/neg/#neg","title":"neg","text":"<pre><code>neg[T: HasNeg](x: T) -&gt; T\n</code></pre>"},{"location":"apis/py/operator/truediv/","title":"truediv","text":"<p>APIs &gt; py &gt; operator &gt; truediv.md</p>"},{"location":"apis/py/operator/truediv/#truediv","title":"truediv","text":"<pre><code>truediv[T: HasTruediv](x: T, y: T) -&gt; T\n</code></pre>"},{"location":"apis/py/sympy/","title":"Index","text":"<p>APIs &gt; py &gt; sympy</p>"},{"location":"apis/py/sympy/#sympy","title":"sympy","text":""},{"location":"apis/py/sympy/#functions","title":"Functions","text":"<ul> <li><code>isprime</code></li> </ul>"},{"location":"apis/py/sympy/isprime/","title":"isprime","text":"<p>APIs &gt; py &gt; sympy &gt; isprime.md</p>"},{"location":"apis/py/sympy/isprime/#isprime","title":"isprime","text":"<pre><code>isprime(n: Int) -&gt; Bool\n</code></pre>"},{"location":"apis/scc/SCCGraph/","title":"SCCGraph","text":"<p>APIs &gt; scc &gt; SCCGraph.md</p>"},{"location":"apis/scc/SCCGraph/#sccgraph","title":"SCCGraph","text":"<pre><code>struct SCCGraph\n</code></pre>"},{"location":"apis/scc/SCCGraph/#methods","title":"Methods","text":""},{"location":"apis/scc/SCCGraph/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int)\n</code></pre>"},{"location":"apis/scc/SCCGraph/#add_edge","title":"<code>add_edge</code>","text":"<pre><code>add_edge(mut self, src: Int, dst: Int)\n</code></pre>"},{"location":"apis/scc/SCCGraph/#scc","title":"<code>scc</code>","text":"<pre><code>scc(self) -&gt; List[List[Int]]\n</code></pre>"},{"location":"apis/scc/","title":"Index","text":"<p>APIs &gt; scc</p>"},{"location":"apis/scc/#scc","title":"scc","text":""},{"location":"apis/scc/#structs","title":"Structs","text":"<ul> <li><code>SCCGraph</code></li> </ul>"},{"location":"apis/segtree/RMaxQ/","title":"RMaxQ","text":"<p>APIs &gt; segtree &gt; RMaxQ.md</p>"},{"location":"apis/segtree/RMaxQ/#rmaxq","title":"RMaxQ","text":"<pre><code>RMaxQ[S: HasLtCollectionElement](n: Int, MIN: S) -&gt; SegTree[S]\nRMaxQ[S: HasLtCollectionElement](v: List[S], MIN: S) -&gt; SegTree[S]\n</code></pre>"},{"location":"apis/segtree/RMinQ/","title":"RMinQ","text":"<p>APIs &gt; segtree &gt; RMinQ.md</p>"},{"location":"apis/segtree/RMinQ/#rminq","title":"RMinQ","text":"<pre><code>RMinQ[S: HasLtCollectionElement](n: Int, MAX: S) -&gt; SegTree[S]\nRMinQ[S: HasLtCollectionElement](v: List[S], MAX: S) -&gt; SegTree[S]\n</code></pre>"},{"location":"apis/segtree/RMulQ/","title":"RMulQ","text":"<p>APIs &gt; segtree &gt; RMulQ.md</p>"},{"location":"apis/segtree/RMulQ/#rmulq","title":"RMulQ","text":"<pre><code>RMulQ[S: MulMonoid](n: Int) -&gt; SegTree[S]\nRMulQ[S: MulMonoid](v: List[S]) -&gt; SegTree[S]\n</code></pre>"},{"location":"apis/segtree/RSumQ/","title":"RSumQ","text":"<p>APIs &gt; segtree &gt; RSumQ.md</p>"},{"location":"apis/segtree/RSumQ/#rsumq","title":"RSumQ","text":"<pre><code>RSumQ[S: AddMonoid](n: Int) -&gt; SegTree[S]\nRSumQ[S: AddMonoid](v: List[S]) -&gt; SegTree[S]\n</code></pre>"},{"location":"apis/segtree/SegTree/","title":"SegTree","text":"<p>APIs &gt; segtree &gt; SegTree.md</p>"},{"location":"apis/segtree/SegTree/#segtree","title":"SegTree","text":"<pre><code>struct SegTree[S: CollectionElement]\n</code></pre>"},{"location":"apis/segtree/SegTree/#methods","title":"Methods","text":""},{"location":"apis/segtree/SegTree/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int, op: fn (S, S) -&gt; S, e: S)\n__init__(out self, v: List[S], op: fn (S, S) -&gt; S, e: S)\n</code></pre>"},{"location":"apis/segtree/SegTree/#set","title":"<code>set</code>","text":"<pre><code>set(mut self, p: Int, x: S)\n</code></pre>"},{"location":"apis/segtree/SegTree/#get","title":"<code>get</code>","text":"<pre><code>get(mut self, p: Int) -&gt; S\n</code></pre>"},{"location":"apis/segtree/SegTree/#prod","title":"<code>prod</code>","text":"<pre><code>prod(self, l: Int, r: Int) -&gt; S\n</code></pre>"},{"location":"apis/segtree/SegTree/#all_prod","title":"<code>all_prod</code>","text":"<pre><code>all_prod(self) -&gt; S\n</code></pre>"},{"location":"apis/segtree/","title":"Index","text":"<p>APIs &gt; segtree</p>"},{"location":"apis/segtree/#segtree","title":"segtree","text":""},{"location":"apis/segtree/#structs","title":"Structs","text":"<ul> <li><code>SegTree</code></li> </ul>"},{"location":"apis/segtree/#functions","title":"Functions","text":"<ul> <li><code>RMaxQ</code></li> <li><code>RMinQ</code></li> <li><code>RMulQ</code></li> <li><code>RSumQ</code></li> <li><code>max_right</code></li> <li><code>min_left</code></li> </ul>"},{"location":"apis/segtree/max_right/","title":"max_right","text":"<p>APIs &gt; segtree &gt; max_right.md</p>"},{"location":"apis/segtree/max_right/#max_right","title":"max_right","text":"<pre><code>max_right(seg: SegTree[Int], l: Int, f: fn (Int) -&gt; Bool) -&gt; Int\nmax_right(seg: SegTree[Int], l: Int, f: fn (Int) escaping -&gt; Bool) -&gt; Int\n</code></pre>"},{"location":"apis/segtree/min_left/","title":"min_left","text":"<p>APIs &gt; segtree &gt; min_left.md</p>"},{"location":"apis/segtree/min_left/#min_left","title":"min_left","text":"<pre><code>min_left(seg: SegTree[Int], r: Int, f: fn (Int) -&gt; Bool) -&gt; Int\nmin_left(seg: SegTree[Int], r: Int, f: fn (Int) escaping -&gt; Bool) -&gt; Int\n</code></pre>"},{"location":"apis/string/","title":"Index","text":"<p>APIs &gt; string</p>"},{"location":"apis/string/#string","title":"string","text":""},{"location":"apis/string/#functions","title":"Functions","text":"<ul> <li><code>lcp_array</code></li> <li><code>string_to_list</code></li> <li><code>suffix_array</code></li> <li><code>z_algorithm</code></li> </ul>"},{"location":"apis/string/lcp_array/","title":"lcp_array","text":"<p>APIs &gt; string &gt; lcp_array.md</p>"},{"location":"apis/string/lcp_array/#lcp_array","title":"lcp_array","text":"<pre><code>lcp_array(s: String, sa: List[Int]) -&gt; List[Int]\nlcp_array[C: HasEqCollectionElement](s: List[C], sa: List[Int]) -&gt; List[Int]\n</code></pre>"},{"location":"apis/string/string_to_list/","title":"string_to_list","text":"<p>APIs &gt; string &gt; string_to_list.md</p>"},{"location":"apis/string/string_to_list/#string_to_list","title":"string_to_list","text":"<pre><code>string_to_list(s: String) -&gt; List[Int]\n</code></pre>"},{"location":"apis/string/suffix_array/","title":"suffix_array","text":"<p>APIs &gt; string &gt; suffix_array.md</p>"},{"location":"apis/string/suffix_array/#suffix_array","title":"suffix_array","text":"<pre><code>suffix_array(s: String) -&gt; List[Int]\n</code></pre>"},{"location":"apis/string/z_algorithm/","title":"z_algorithm","text":"<p>APIs &gt; string &gt; z_algorithm.md</p>"},{"location":"apis/string/z_algorithm/#z_algorithm","title":"z_algorithm","text":"<pre><code>z_algorithm[S: HasEqCollectionElement](s: List[S]) -&gt; List[Int]\nz_algorithm(s: String) -&gt; List[Int]\n</code></pre>"},{"location":"apis/twosat/TwoSat/","title":"TwoSat","text":"<p>APIs &gt; twosat &gt; TwoSat.md</p>"},{"location":"apis/twosat/TwoSat/#twosat","title":"TwoSat","text":"<pre><code>struct TwoSat\n</code></pre>"},{"location":"apis/twosat/TwoSat/#methods","title":"Methods","text":""},{"location":"apis/twosat/TwoSat/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int)\n</code></pre>"},{"location":"apis/twosat/TwoSat/#add_clause","title":"<code>add_clause</code>","text":"<pre><code>add_clause(mut self, i: Int, f: Bool, j: Int, g: Bool)\n</code></pre>"},{"location":"apis/twosat/TwoSat/#satisfiable","title":"<code>satisfiable</code>","text":"<pre><code>satisfiable(mut self) -&gt; Bool\n</code></pre>"},{"location":"apis/twosat/TwoSat/#answer","title":"<code>answer</code>","text":"<pre><code>answer(self) -&gt; List[Bool]\n</code></pre>"},{"location":"apis/twosat/","title":"Index","text":"<p>APIs &gt; twosat</p>"},{"location":"apis/twosat/#twosat","title":"twosat","text":""},{"location":"apis/twosat/#structs","title":"Structs","text":"<ul> <li><code>TwoSat</code></li> </ul>"},{"location":"en/contribute/","title":"Contributing","text":"<p>This page is under development.</p>"},{"location":"en/contribute/#library","title":"Library","text":"<p>We use online-judge-tools/verification-helper for testing.</p>"},{"location":"en/contribute/#installation","title":"Installation","text":"<pre><code>pip3 install online-judge-verify-helper\n</code></pre>"},{"location":"en/contribute/#running-tests","title":"Running Tests","text":"<pre><code>oj-verify run\n</code></pre> <p>Note: It may take some time on the first run.</p>"},{"location":"en/contribute/#documentation","title":"Documentation","text":"<p>We use MkDocs for documentation. It's automated with GitHub Actions, so you only need to edit the <code>docs</code> folder.</p>"},{"location":"en/","title":"\ud83d\udea7 Page Under Construction","text":"<p>This page is not yet available in English.</p> <p>If you would like to help us complete the English documentation, please check out the Contributing Guide and consider making a contribution!</p> <p>Your help would be greatly appreciated \ud83d\udc96</p>"},{"location":"en/license/","title":"License","text":"<p>This project is dual-licensed under <code>CC0-1.0</code> or <code>Apache-2.0</code>. You may choose either license to use this project.</p> <p>The full license texts are included below:</p> <p>=========================</p> <p>Creative Commons Legal Code</p> <p>CC0 1.0 Universal</p> <pre><code>CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.\n</code></pre> <p>Statement of Purpose</p> <p>The laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an \"owner\") of an original work of authorship and/or a database (each, a \"Work\").</p> <p>Certain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (\"Commons\") that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.</p> <p>For these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the \"Affirmer\"), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.</p> <ol> <li>Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (\"Copyright and Related Rights\"). Copyright and Related Rights include, but are not limited to, the following:</li> </ol> <p>i. the right to reproduce, adapt, distribute, perform, display,      communicate, and translate a Work;  ii. moral rights retained by the original author(s) and/or performer(s); iii. publicity and privacy rights pertaining to a person's image or      likeness depicted in a Work;  iv. rights protecting against unfair competition in regards to a Work,      subject to the limitations in paragraph 4(a), below;   v. rights protecting the extraction, dissemination, use and reuse of data      in a Work;  vi. database rights (such as those arising under Directive 96/9/EC of the      European Parliament and of the Council of 11 March 1996 on the legal      protection of databases, and under any national implementation      thereof, including any amended or successor version of such      directive); and vii. other similar, equivalent or corresponding rights throughout the      world based on applicable law or treaty, and any national      implementations thereof.</p> <ol> <li> <p>Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose.</p> </li> <li> <p>Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"License\"). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose.</p> </li> <li> <p>Limitations and Disclaimers.</p> </li> </ol> <p>a. No trademark or patent rights held by Affirmer are waived, abandoned,     surrendered, licensed or otherwise affected by this document.  b. Affirmer offers the Work as-is and makes no representations or     warranties of any kind concerning the Work, express, implied,     statutory or otherwise, including without limitation warranties of     title, merchantability, fitness for a particular purpose, non     infringement, or the absence of latent or other defects, accuracy, or     the present or absence of errors, whether or not discoverable, all to     the greatest extent permissible under applicable law.  c. Affirmer disclaims responsibility for clearing rights of other persons     that may apply to the Work or any use thereof, including without     limitation any person's Copyright and Related Rights in the Work.     Further, Affirmer disclaims responsibility for obtaining any necessary     consents, permissions or other rights required for any use of the     Work.  d. Affirmer understands and acknowledges that Creative Commons is not a     party to this document and has no duty or obligation with respect to     this CC0 or use of the Work.</p> <p>=========================</p> <pre><code>                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright [yyyy] [name of copyright owner]</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\");    you may not use this file except in compliance with the License.    You may obtain a copy of the License at</p> <pre><code>   http://www.apache.org/licenses/LICENSE-2.0\n</code></pre> <p>Unless required by applicable law or agreed to in writing, software    distributed under the License is distributed on an \"AS IS\" BASIS,    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    See the License for the specific language governing permissions and    limitations under the License.</p>"},{"location":"en/apis/convolution/convolution_int/#convolution_int","title":"convolution_int","text":"<pre><code>convolution_int(a: List[Int], b: List[Int]) -&gt; List[Int]\n</code></pre>"},{"location":"en/apis/convolution/convolution_mod/#convolution_mod","title":"convolution_mod","text":"<pre><code>convolution_mod[M: Int](a: List[StaticModint[M]], b: List[StaticModint[M]]) -&gt; List[StaticModint[M]]\n</code></pre>"},{"location":"en/apis/convolution/#convolution","title":"convolution","text":""},{"location":"en/apis/dsu/DSU/#dsu","title":"DSU","text":"<pre><code>struct DSU\n</code></pre>"},{"location":"en/apis/dsu/DSU/#__init__","title":"<code>__init__</code>","text":"<pre><code>__init__(out self, n: Int)\n</code></pre>"},{"location":"en/apis/dsu/DSU/#merge","title":"<code>merge</code>","text":"<pre><code>merge(mut self, a: Int, b: Int) -&gt; Int\n</code></pre>"}]}